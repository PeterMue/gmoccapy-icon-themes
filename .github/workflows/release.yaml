name: Release Icon Themes

on:
  push:
    tags:
      - 'v*' 
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y inkscape python3 python3-pip

      - name: 📦 Install Python packages
        run: pip3 install -r requirements.txt

      - name: 🎨 Run build script
        run: |
          chmod +x build.sh
          ./build.sh

      - name: 📁 Package icons
        run: |
          cd target
          for dir in */; do
            if [ -f "${dir}index.theme" ]; then
              zip -r "${dir%/}.zip" "$dir"
            fi
          done

      - name: 💾 Upload built icon themes
        uses: actions/upload-artifact@v4
        with:
          name: target-dir
          path: target/*/

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.zip
          fail_on_unmatched_files: true

  generate-docs:
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download built icon themes
        uses: actions/download-artifact@v4
        with:
          name: target-dir
          path: target

      - name: 🎨 Build docs
        run: |
          mkdir -p docs/assets/themes
          for dir in target/*/; do 
            if [ -f "${dir}index.theme" ]; then
              cp -r "$dir" docs/assets/themes;
            fi
          done
          cd docs
          chmod +x build.sh
          ./build.sh

      - name: ⚙️ Setup Pages
        uses: actions/configure-pages@v5

      - name: 🏗 Build Jekyll site
        uses: actions/jekyll-build-pages@v1
        with:
          source: docs
          destination: _site

      - name: 📦 Upload site artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-docs
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
